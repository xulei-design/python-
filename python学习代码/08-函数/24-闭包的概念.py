# 如果在一个内部函数里，对在外部作用域（但不是在全局作用域）的变量进行引用，那么内部函数就被认为是闭包(closure).
def outer():
    x = 10  # 在外部函数里定义了一个变量x，是一个局部变量

    def inner():
        # 在内部函数如何修改外部函数的局部变量
        nonlocal x  # 此时，这里的x不再是新增的变量，而不是外部的局部变量x
        y = x + 1
        print('inner里的y=%d' % y)
        x = 20  # 不是修改外部的x变量，而是在inner函数内部创建了一个新的变量x

    return inner


outer()()
